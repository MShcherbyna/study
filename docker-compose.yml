services:
    laravel.test:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - mongodb
            - redis
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    mongodb:
        image: 'mongodb/mongodb-atlas-local:latest'
        environment:
            - 'MONGODB_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-}'
            - 'MONGODB_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-}'
        volumes:
            - 'sail-mongodb:/data/db'
        ports:
            - '${FORWARD_MONGODB_PORT:-27017}:27017'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mongosh
                - 'mongodb://localhost:27017/admin'
                - '--eval=db.runCommand({ping:1})'
            retries: 3
            timeout: 5s
    zookeeper:
        image: 'wurstmeister/zookeeper:3.4.6'
        ports:
            - '2181:2181'
        networks:
            - sail
    kafka:
        image: 'wurstmeister/kafka:2.12-2.2.1'
        ports:
            - '9092:9092'
            - '9093:9093'
        environment:
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093'
            KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_BROKER_ID: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            - zookeeper
        networks:
            - sail
    kafka-ui:
        image: 'provectuslabs/kafka-ui:latest'
        ports:
            - '8081:8080'
        environment:
            - KAFKA_CLUSTERS_0_NAME=local
            - 'KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092'
        networks:
            - sail
        depends_on:
            - kafka
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-mongodb:
        driver: local
    sail-redis:
        driver: local
